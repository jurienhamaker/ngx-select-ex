import * as escapeStringNs from 'escape-string-regexp';
const escapeString = escapeStringNs;
export class NgxSelectOption {
    constructor(value, text, disabled, data, _parent = null) {
        this.value = value;
        this.text = text;
        this.disabled = disabled;
        this.data = data;
        this._parent = _parent;
        this.type = 'option';
        this.cacheRenderedText = null;
    }
    get parent() {
        return this._parent;
    }
    renderText(sanitizer, highlightText) {
        if (this.cacheHighlightText !== highlightText || this.cacheRenderedText === null) {
            this.cacheHighlightText = highlightText;
            if (this.cacheHighlightText) {
                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml((this.text + '').replace(new RegExp(escapeString(this.cacheHighlightText), 'gi'), '<strong>$&</strong>'));
            }
            else {
                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml(this.text);
            }
        }
        return this.cacheRenderedText;
    }
}
export class NgxSelectOptGroup {
    constructor(label, options = []) {
        this.label = label;
        this.options = options;
        this.type = 'optgroup';
        this.filter(() => true);
    }
    filter(callbackFn) {
        this.optionsFiltered = this.options.filter((option) => callbackFn(option));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXNlbGVjdC5jbGFzc2VzLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uL3NyYy9hcHAvbGliLyIsInNvdXJjZXMiOlsibmd4LXNlbGVjdC9uZ3gtc2VsZWN0LmNsYXNzZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxLQUFLLGNBQWMsTUFBTSxzQkFBc0IsQ0FBQztBQUd2RCxNQUFNLFlBQVksR0FBRyxjQUFjLENBQUM7QUFFcEMsTUFBTSxPQUFPLGVBQWU7SUFNeEIsWUFBbUIsS0FBc0IsRUFDdEIsSUFBWSxFQUNaLFFBQWlCLEVBQ2pCLElBQVMsRUFDUixVQUE2QixJQUFJO1FBSmxDLFVBQUssR0FBTCxLQUFLLENBQWlCO1FBQ3RCLFNBQUksR0FBSixJQUFJLENBQVE7UUFDWixhQUFRLEdBQVIsUUFBUSxDQUFTO1FBQ2pCLFNBQUksR0FBSixJQUFJLENBQUs7UUFDUixZQUFPLEdBQVAsT0FBTyxDQUEwQjtRQVRyQyxTQUFJLEdBQXlCLFFBQVEsQ0FBQztRQWlCOUMsc0JBQWlCLEdBQWEsSUFBSSxDQUFDO0lBUDNDLENBQUM7SUFFRCxJQUFXLE1BQU07UUFDYixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDeEIsQ0FBQztJQUtNLFVBQVUsQ0FBQyxTQUF1QixFQUFFLGFBQXFCO1FBQzVELElBQUksSUFBSSxDQUFDLGtCQUFrQixLQUFLLGFBQWEsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEtBQUssSUFBSSxFQUFFO1lBQzlFLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxhQUFhLENBQUM7WUFDeEMsSUFBSSxJQUFJLENBQUMsa0JBQWtCLEVBQUU7Z0JBQ3pCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxTQUFTLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FDL0UsSUFBSSxNQUFNLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLElBQUksQ0FBQyxFQUFFLHFCQUFxQixDQUNqRixDQUFDLENBQUM7YUFDTjtpQkFBTTtnQkFDSCxJQUFJLENBQUMsaUJBQWlCLEdBQUcsU0FBUyxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUN6RTtTQUNKO1FBQ0QsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUM7SUFDbEMsQ0FBQztDQUNKO0FBRUQsTUFBTSxPQUFPLGlCQUFpQjtJQUsxQixZQUFtQixLQUFhLEVBQ2IsVUFBNkIsRUFBRTtRQUQvQixVQUFLLEdBQUwsS0FBSyxDQUFRO1FBQ2IsWUFBTyxHQUFQLE9BQU8sQ0FBd0I7UUFMbEMsU0FBSSxHQUF5QixVQUFVLENBQUM7UUFNcEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRU0sTUFBTSxDQUFDLFVBQTJDO1FBQ3JELElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUF1QixFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNoRyxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEb21TYW5pdGl6ZXIsIFNhZmVIdG1sIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgKiBhcyBlc2NhcGVTdHJpbmdOcyBmcm9tICdlc2NhcGUtc3RyaW5nLXJlZ2V4cCc7XG5pbXBvcnQgeyBJTmd4U2VsZWN0T3B0R3JvdXAsIElOZ3hTZWxlY3RPcHRpb24sIElOZ3hTZWxlY3RPcHRpb25CYXNlLCBUTmd4U2VsZWN0T3B0aW9uVHlwZSB9IGZyb20gJy4vbmd4LXNlbGVjdC5pbnRlcmZhY2VzJztcblxuY29uc3QgZXNjYXBlU3RyaW5nID0gZXNjYXBlU3RyaW5nTnM7XG5cbmV4cG9ydCBjbGFzcyBOZ3hTZWxlY3RPcHRpb24gaW1wbGVtZW50cyBJTmd4U2VsZWN0T3B0aW9uLCBJTmd4U2VsZWN0T3B0aW9uQmFzZSB7XG4gICAgcHVibGljIHJlYWRvbmx5IHR5cGU6IFROZ3hTZWxlY3RPcHRpb25UeXBlID0gJ29wdGlvbic7XG5cbiAgICBwdWJsaWMgaGlnaGxpZ2h0ZWRUZXh0OiBTYWZlSHRtbDtcbiAgICBwdWJsaWMgYWN0aXZlOiBib29sZWFuO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIHZhbHVlOiBudW1iZXIgfCBzdHJpbmcsXG4gICAgICAgICAgICAgICAgcHVibGljIHRleHQ6IHN0cmluZyxcbiAgICAgICAgICAgICAgICBwdWJsaWMgZGlzYWJsZWQ6IGJvb2xlYW4sXG4gICAgICAgICAgICAgICAgcHVibGljIGRhdGE6IGFueSxcbiAgICAgICAgICAgICAgICBwcml2YXRlIF9wYXJlbnQ6IE5neFNlbGVjdE9wdEdyb3VwID0gbnVsbCkge1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgcGFyZW50KCk6IE5neFNlbGVjdE9wdEdyb3VwIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3BhcmVudDtcbiAgICB9XG5cbiAgICBwcml2YXRlIGNhY2hlSGlnaGxpZ2h0VGV4dDogc3RyaW5nO1xuICAgIHByaXZhdGUgY2FjaGVSZW5kZXJlZFRleHQ6IFNhZmVIdG1sID0gbnVsbDtcblxuICAgIHB1YmxpYyByZW5kZXJUZXh0KHNhbml0aXplcjogRG9tU2FuaXRpemVyLCBoaWdobGlnaHRUZXh0OiBzdHJpbmcpOiBTYWZlSHRtbCB7XG4gICAgICAgIGlmICh0aGlzLmNhY2hlSGlnaGxpZ2h0VGV4dCAhPT0gaGlnaGxpZ2h0VGV4dCB8fCB0aGlzLmNhY2hlUmVuZGVyZWRUZXh0ID09PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLmNhY2hlSGlnaGxpZ2h0VGV4dCA9IGhpZ2hsaWdodFRleHQ7XG4gICAgICAgICAgICBpZiAodGhpcy5jYWNoZUhpZ2hsaWdodFRleHQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNhY2hlUmVuZGVyZWRUZXh0ID0gc2FuaXRpemVyLmJ5cGFzc1NlY3VyaXR5VHJ1c3RIdG1sKCh0aGlzLnRleHQgKyAnJykucmVwbGFjZShcbiAgICAgICAgICAgICAgICAgICAgbmV3IFJlZ0V4cChlc2NhcGVTdHJpbmcodGhpcy5jYWNoZUhpZ2hsaWdodFRleHQpLCAnZ2knKSwgJzxzdHJvbmc+JCY8L3N0cm9uZz4nXG4gICAgICAgICAgICAgICAgKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuY2FjaGVSZW5kZXJlZFRleHQgPSBzYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdEh0bWwodGhpcy50ZXh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5jYWNoZVJlbmRlcmVkVGV4dDtcbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBOZ3hTZWxlY3RPcHRHcm91cCBpbXBsZW1lbnRzIElOZ3hTZWxlY3RPcHRHcm91cCwgSU5neFNlbGVjdE9wdGlvbkJhc2Uge1xuICAgIHB1YmxpYyByZWFkb25seSB0eXBlOiBUTmd4U2VsZWN0T3B0aW9uVHlwZSA9ICdvcHRncm91cCc7XG5cbiAgICBwdWJsaWMgb3B0aW9uc0ZpbHRlcmVkOiBOZ3hTZWxlY3RPcHRpb25bXTtcblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBsYWJlbDogc3RyaW5nLFxuICAgICAgICAgICAgICAgIHB1YmxpYyBvcHRpb25zOiBOZ3hTZWxlY3RPcHRpb25bXSA9IFtdKSB7XG4gICAgICAgIHRoaXMuZmlsdGVyKCgpID0+IHRydWUpO1xuICAgIH1cblxuICAgIHB1YmxpYyBmaWx0ZXIoY2FsbGJhY2tGbjogKHZhbHVlOiBOZ3hTZWxlY3RPcHRpb24pID0+IGFueSk6IHZvaWQge1xuICAgICAgICB0aGlzLm9wdGlvbnNGaWx0ZXJlZCA9IHRoaXMub3B0aW9ucy5maWx0ZXIoKG9wdGlvbjogTmd4U2VsZWN0T3B0aW9uKSA9PiBjYWxsYmFja0ZuKG9wdGlvbikpO1xuICAgIH1cbn1cblxuZXhwb3J0IHR5cGUgVFNlbGVjdE9wdGlvbiA9IE5neFNlbGVjdE9wdEdyb3VwIHwgTmd4U2VsZWN0T3B0aW9uO1xuIl19